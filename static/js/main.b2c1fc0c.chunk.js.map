{"version":3,"sources":["images/AdeptaSororitas.png","images/AdeptusMechanicus.png","images/AstraMilitarum.png","images/DarkAngels.png","images/Deathwatch.png","images/ExportWarband.png","images/ImportWarband.png","images/LegendaryIcon.png","images/OpenEditor.png","images/OpenEditorSelected.png","images/RefreshWarband.png","images/RefreshWarbandDisabled.png","images/SavePdf.png","images/SpaceMarines.png","images/TauEmpire.png","images/UseSample.png","types.ts","images/index.ts","utility/FileUploader.tsx","utility/PdfGenerator.tsx","utility/ErrorMessages.tsx","utility/Utils.ts","utility/StratagemValidator.tsx","pages/LandingPage.tsx","CodeMirror.tsx","utility/ToggleEditor.tsx","utility/Toolbar.tsx","WarbandRendering/ArmyKeywords.tsx","WarbandRendering/ArmyRules.tsx","WarbandRendering/ArmyTacticalPoints.tsx","WarbandRendering/ModelEquipment.tsx","WarbandRendering/ModelHeaderRenderer.tsx","WarbandRendering/ModelKeywords.tsx","WarbandRendering/ModelRules.tsx","WarbandRendering/ModelStats.tsx","WarbandRendering/ModelSheet.tsx","WarbandRendering/WarbandRenderer.tsx","pages/WarbandPage.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","FactionEnum","DarkAngelsCover","UseSamplePng","DarkAngelsPng","TauEmpireCover","TauEmpirePng","PrimarisCover","PrimarisPng","AdeptusMechanicusCover","AdeptusMechanicusPng","DeathwatchCover","DeathwatchPng","AdeptaSororitasCover","AstraMilitarumPng","AdeptaSororitasPng","ImportWarbandIcon","ImportWarbandPng","ExportWarbandIcon","ExportPng","OpenEditorIcon","OpenEditorPng","OpenEditorSelectedIcon","OpenEditorSelectedPng","SavePdfIcon","SavePdfPng","RefreshWarbandIcon","RefreshWarbandPng","RefreshWarbandDisabledIcon","RefreshWarbandDisabledPng","LegendaryIcon","LegendaryPng","FileUploader","image","setStateCallback","htmlFor","className","style","gridArea","id","type","accept","visibility","onChange","reader","FileReader","onload","ev","JSON","parse","target","result","readAsText","document","querySelector","files","item","PdfGenerator","title","exportPdf","a","jsPdf","jsPDF","container","Array","from","querySelectorAll","i","length","addPage","html2canvas","scale","letterRendering","canvas","addImage","toDataURL","internal","pageSize","getWidth","getHeight","save","src","left","alt","onClick","ErrorMessages","errors","instance","error","this","filter","currentError","idx","arr","indexOf","ErrorMessageRenderer","getInstance","getErrors","cssClass","map","weapons","EquipmentJson","otherEquipment","rules","RulesJson","philosophies","getModelMetadata","name","faction","getFactionSpecifics","UnitList","find","unit","toLocaleUpperCase","remixModel","metaDataModel","rosterModel","amount","price","keywords","keyword","array","stats","isArray","isRenderWeapon","weaponRef","undefined","multiProfiles","isMultiProfileWeapon","weapon","isBasicWeapon","strength","damage","ap","isSuperBasicWeapon","isMultiProfileRenderWeapon","getWeaponProfile","weaponDetails","getWeaponDetails","getWeaponPrice","addErrorMessage","isWeaponReference","AdeptaSororitas","AdeptaSororitasArmySpecific","AdeptusMechanicus","AdeptusMechanicusArmySpecific","DarkAngels","DarkAngelsArmySpecific","PrimarisSpaceMarines","PrimarisArmySpecifics","Tau","TauArmySpecifics","weaponName","WeaponPriceList","getOtherEquipmentDetails","equi","getTotalUnitPrice","model","totalPrice","equipment","reduce","isLegendary","rule","getRosterPrice","models","totalCost","getArmyRules","alignment","factionSpecifics","factionRules","ArmyRules","alignmentRule","Alignments","align","getRule","ruleName","actualRule","alignmentParameter","effect","replace","AlignmentPlaceholder","getAllKeywords","sort","getPhilosophy","phil","philosophy","Philosophies","isWarband","json","titleExistsAndIsString","Title","factionExistsAndIsString","Faction","scenarioExistsAndIsNumber","ScenariosPlayed","hasTrueHeros","members","warband","member","hasArmouryEquipment","some","isArmouryItem","getStratagems","myArr","text","Roster","acc","ModelAllowance","Core","countSpecial","Special","factionKeywords","Keywords","Alignment","membersWithoutFactionKeywords","factionKeyword","shift","commonKeywords","every","inner","innerKeyword","allUnitsSharedKeyword","LandingPage","useState","state","setState","pathname","setPathName","fontSize","fontWeight","position","top","width","height","stateFromCallback","float","padding","display","gridTemplateColumns","to","push","DarkAngelsJson","TauJson","PrimarisJson","require","CodeEditorContainer","code","visible","onSave","stringify","codeEditorState","setCodeEditorState","isViable","setViable","isDirty","setDirty","useEffect","cursor","anchor","createElement","body","appendChild","blob","Blob","url","window","URL","createObjectURL","href","download","click","revokeObjectURL","removeChild","getElementById","saveJsonToFile","value","options","theme","viewportMargin","Infinity","mode","statementIndent","gutters","lineNumbers","indentWithTabs","tabSize","lint","onUpdateLinting","annotationsNotSorted","annotations","codeMirror","isWarbandBool","e","console","log","autoCursor","onBeforeChange","_editor","_data","editor","data","removed","toString","setCursor","getCursor","ch","line","ToggleEditor","setEditorVisibility","selected","toggleSelected","Toolbar","ArmyKeywordsRenderer","join","ArmyRulesHeaderRenderer","armyRules","key","ArmyTacticalPointsRenderer","stratagems","tacticalPoints","stata","tp","checkboxes","border","marginRight","marginTop","background","renderCheckboxes","paddingRight","stratagem","ModelEquipmentRenderer","weaponRuleRender","weaponNameRender","renderWeaponStats","range","renderMultiProfileHeader","keyName","weaponRule","colSpan","renderWeapon","cnt","amountString","headerString","weaponPriceString","concat","profile","otherEquipmentPriceString","renderOtherEquipment","ModelHeaderRenderer","textAlign","ModelKeywordRenderer","paddingLeft","ModelRulesRenderer","ModelStatsRenderer","renderAtomicStats","characteristics","rowSpan","paddingTop","Movement","WeaponSkill","BallisticSkill","Strength","Toughness","Wounds","Attacks","Leadership","Save","InvulnerableSave","ModelSheetRenderer","WarbandRenderer","page","rosterPrice","fullRender","hide","nr","Philosophy","total","WarbandPage","path","modelMap","setModelMap","location","editorVisible","el","getBoundingClientRect","element","roster","modelMetadata","harmonizedRosterModel","alignmentPlaceholder","remixedModel","ruleStrings","otherRosterEquipment","rosterWeapons","replacedWeapons","replacing","replacedWeapon","otherRemixedEquipment","getDetailedRoster","filterRosterToPage","entry","getPageCountFromMap","pages","renderPages","App","component","Boolean","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.b2c1fc0c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/AdeptaSororitas.9eb926cf.png\";","module.exports = __webpack_public_path__ + \"static/media/AdeptusMechanicus.d47832b5.png\";","module.exports = __webpack_public_path__ + \"static/media/AstraMilitarum.d1b5f2e7.png\";","module.exports = __webpack_public_path__ + \"static/media/DarkAngels.672b9908.png\";","module.exports = __webpack_public_path__ + \"static/media/Deathwatch.46c03a26.png\";","module.exports = __webpack_public_path__ + \"static/media/ExportWarband.1a854609.png\";","module.exports = __webpack_public_path__ + \"static/media/ImportWarband.3f43d3d9.png\";","module.exports = __webpack_public_path__ + \"static/media/LegendaryIcon.208b6084.png\";","module.exports = __webpack_public_path__ + \"static/media/OpenEditor.c670e89f.png\";","module.exports = __webpack_public_path__ + \"static/media/OpenEditorSelected.b5346434.png\";","module.exports = __webpack_public_path__ + \"static/media/RefreshWarband.cbab8446.png\";","module.exports = __webpack_public_path__ + \"static/media/RefreshWarbandDisabled.704b0cf5.png\";","module.exports = __webpack_public_path__ + \"static/media/SavePdf.e43a561f.png\";","module.exports = __webpack_public_path__ + \"static/media/SpaceMarines.f1527fb0.png\";","module.exports = __webpack_public_path__ + \"static/media/TauEmpire.d19e7417.png\";","module.exports = __webpack_public_path__ + \"static/media/UseSample.4145c5e6.png\";","export enum FactionEnum {\r\n    PrimarisSpaceMarines = \"Primaris Space Marines\",\r\n    DarkAngels = \"Dark Angels\",\r\n    Tau = \"Tau Empire\",\r\n    AdeptusMechanicus = \"Adeptus Mechanicus\",\r\n    AdeptaSororitas = \"Adepta Sororitas\",\r\n    Deathwatch = \"Deathwatch\",\r\n    AstraMilitarum = \"Astra Militarum\",\r\n}\r\n\r\nexport type RosterWeapon = RenderWeapon;\r\nexport type MetadataWeapon = SuperBasicWeapon | MultiProfileWeapon;\r\nexport type RenderWeapon = BasicWeapon | MultiProfileRenderWeapon;\r\n\r\nexport interface Warband {\r\n    Title: string;\r\n    Faction: string;\r\n    ScenariosPlayed?: number;\r\n    Philosophy?: string;\r\n    Alignment?: string;\r\n    Roster: Array<RosterModel | string>;\r\n}\r\n\r\nexport interface RenderWarband {\r\n    Title: string;\r\n    Faction: string;\r\n    ScenariosPlayed?: number;\r\n    Philosophy?: string;\r\n    Alignment?: string;\r\n    Roster: RenderModel[];\r\n}\r\n\r\nexport interface ModelStats {\r\n    Movement: number;\r\n    WeaponSkill: string;\r\n    BallisticSkill: string;\r\n    Strength: number;\r\n    Attacks: number;\r\n    Toughness: number;\r\n    Wounds: string | number;\r\n    Leadership: number;\r\n    Save: string;\r\n    InvulnerableSave: string;\r\n}\r\n\r\nexport interface WeaponReference {\r\n    name: string;\r\n    amount: number;\r\n}\r\nexport interface RosterWeaponReference extends WeaponReference {\r\n    replacing: string | string[];\r\n}\r\n// Rule interface\r\nexport interface Rule {\r\n    name: string;\r\n    effect: string;\r\n    price?: number;\r\n    alignmentParameter?: boolean;\r\n}\r\n\r\nexport interface Denizens {\r\n    NightMarket: Enemy[];\r\n}\r\nexport interface Enemy {\r\n    name: string;\r\n    amount?: number;\r\n    kind?: string;\r\n    price?: number;\r\n    type: string;\r\n    stats: ModelStats;\r\n    rules?: Rule[];\r\n    keywords: string[];\r\n    equipment: any;\r\n}\r\n\r\nexport interface OtherEquipment {\r\n    name: string;\r\n    effect: string;\r\n    price?: number;\r\n    isArmouryItem?: boolean;\r\n}\r\n\r\nexport interface Dictionary<T> {\r\n    [Key: string]: T;\r\n}\r\n\r\nexport interface ModelAllowance {\r\n    Core: number;\r\n    Special: number;\r\n    Leader: number;\r\n}\r\nexport interface TacticalPoints {\r\n    name: string;\r\n    amount: number;\r\n    text: string;\r\n}\r\nexport interface Philosophy {\r\n    name: string;\r\n    tp: number;\r\n    text: string;\r\n}\r\n\r\nexport interface PageMap {\r\n    id: string;\r\n    page: number;\r\n}\r\n\r\nexport interface UnifiedModel {\r\n    name: string;\r\n    type?: string;\r\n    stats?: ModelStats | ModelStats[];\r\n    keywords?: string[];\r\n}\r\n\r\nexport interface RosterModel extends UnifiedModel {\r\n    amount?: number;\r\n    equipment?: RosterEquipment;\r\n    rules?: string[];\r\n}\r\nexport interface RosterEquipment {\r\n    weapons?: Array<RosterWeaponReference | RenderWeapon | string>;\r\n    otherEquipment?: Array<OtherEquipment | string>;\r\n}\r\nexport interface MetadataModel extends UnifiedModel {\r\n    price: number;\r\n    type: string;\r\n    stats: ModelStats | ModelStats[];\r\n    keywords: string[];\r\n    rules?: string[];\r\n    equipment?: MetadataModelEquipment;\r\n}\r\nexport interface MetadataModelEquipment {\r\n    weapons?: Array<string | WeaponReference>;\r\n    otherEquipment?: string[];\r\n}\r\n\r\nexport interface RenderModel extends UnifiedModel {\r\n    type: string;\r\n    price: number;\r\n    amount?: number;\r\n    stats: ModelStats | ModelStats[];\r\n    rules: Rule[];\r\n    keywords: string[];\r\n    equipment?: RenderEquipment;\r\n}\r\n\r\nexport interface RenderEquipment {\r\n    weapons?: RenderWeapon[];\r\n    otherEquipment?: OtherEquipment[];\r\n}\r\n\r\nexport interface MultiProfileRenderWeapon extends MultiProfileWeapon {\r\n    price: number;\r\n    amount: number;\r\n}\r\nexport interface MultiProfileWeapon {\r\n    name: string;\r\n    multiProfiles: Array<MultiProfileWeapon | SuperBasicWeapon>;\r\n    rule?: string | Array<string | Rule>;\r\n    isLegendary?: boolean;\r\n    isArmouryItem?: boolean;\r\n}\r\nexport interface BasicWeapon extends SuperBasicWeapon {\r\n    price: number;\r\n    amount: number;\r\n    isLegendary?: boolean;\r\n}\r\n\r\nexport interface SuperBasicWeapon {\r\n    name: string;\r\n    type: string;\r\n    strength: string | number;\r\n    damage: string | number;\r\n    ap: string | number;\r\n    range?: number;\r\n    rule?: string | Array<string | Rule>;\r\n    isArmouryItem?: boolean;\r\n    isLegendary?: boolean;\r\n}\r\n\r\nexport interface ArmySpecificStuff {\r\n    ArmyRules?: Rule[];\r\n    Alignments?: Rule[];\r\n    AlignmentPlaceholder?: string;\r\n    Keywords: string[];\r\n    ModelAllowance: {\r\n        Core: number;\r\n        Special: number;\r\n        Leader: number;\r\n    };\r\n    Philosophies: Philosophy[];\r\n    WeaponPriceList: Array<{\r\n        name: string;\r\n        price: number;\r\n    }>;\r\n    UnitList: MetadataModel[];\r\n}\r\n","import AdeptaSororitasPng from \"./AdeptaSororitas.png\";\r\nimport AdeptusMechanicusPng from \"./AdeptusMechanicus.png\";\r\nimport AstraMilitarumPng from \"./AstraMilitarum.png\";\r\nimport DarkAngelsPng from \"./DarkAngels.png\";\r\nimport DeathwatchPng from \"./Deathwatch.png\";\r\nimport ExportPng from \"./ExportWarband.png\";\r\nimport ImportWarbandPng from \"./ImportWarband.png\";\r\nimport LegendaryPng from \"./LegendaryIcon.png\";\r\nimport OpenEditorPng from \"./OpenEditor.png\";\r\nimport OpenEditorSelectedPng from \"./OpenEditorSelected.png\";\r\nimport RefreshWarbandPng from \"./RefreshWarband.png\";\r\nimport RefreshWarbandDisabledPng from \"./RefreshWarbandDisabled.png\";\r\nimport SavePdfPng from \"./SavePdf.png\";\r\nimport PrimarisPng from \"./SpaceMarines.png\";\r\nimport TauEmpirePng from \"./TauEmpire.png\";\r\nimport UseSamplePng from \"./UseSample.png\";\r\n\r\nexport const UseSampleIcon = UseSamplePng;\r\nexport const DarkAngelsCover = DarkAngelsPng;\r\nexport const TauEmpireCover = TauEmpirePng;\r\nexport const PrimarisCover = PrimarisPng;\r\nexport const AdeptusMechanicusCover = AdeptusMechanicusPng;\r\nexport const DeathwatchCover = DeathwatchPng;\r\nexport const AstraMilitarumCover = AstraMilitarumPng;\r\nexport const AdeptaSororitasCover = AdeptaSororitasPng;\r\n\r\nexport const ImportWarbandIcon = ImportWarbandPng;\r\nexport const ExportWarbandIcon = ExportPng;\r\nexport const OpenEditorIcon = OpenEditorPng;\r\nexport const OpenEditorSelectedIcon = OpenEditorSelectedPng;\r\nexport const SavePdfIcon = SavePdfPng;\r\nexport const RefreshWarbandIcon = RefreshWarbandPng;\r\nexport const RefreshWarbandDisabledIcon = RefreshWarbandDisabledPng;\r\n\r\nexport const LegendaryIcon = LegendaryPng;\r\n","import React from \"react\";\r\n\r\nexport const FileUploader = ({ image, setStateCallback }: { image: JSX.Element; setStateCallback(json: any): void }) => {\r\n    const onChange = () => {\r\n        const reader = new FileReader();\r\n        reader.onload = (ev: ProgressEvent<FileReader>) => {\r\n            setStateCallback(JSON.parse(ev.target?.result as string));\r\n        };\r\n        reader.readAsText((document.querySelector(\"#file-uploader\") as HTMLInputElement)?.files?.item(0) as File);\r\n    };\r\n    return <label htmlFor=\"file-uploader\" className=\"landing-page-columns\" style={{ gridArea: \"1/1\" }}>\r\n        <input id=\"file-uploader\" type=\"file\" accept=\".json\" style={{ visibility: \"hidden\" }} onChange={onChange}></input>\r\n        {image}\r\n    </label>;\r\n};\r\n","import html2canvas from \"html2canvas\";\r\nimport { jsPDF } from \"jspdf\";\r\nimport React from \"react\";\r\nimport { SavePdfIcon } from \"../images\";\r\nexport const PdfGenerator = ({ title }: { title: string }) => {\r\n\r\n    const exportPdf = async () => {\r\n        const jsPdf = new jsPDF(\"p\", \"mm\", \"a4\");\r\n        let canvas: HTMLCanvasElement;\r\n        const container = Array.from(document.querySelectorAll(\".pdf-container\"));\r\n        for (let i = 0; i < container.length; i++) {\r\n            if (i > 0) {\r\n                jsPdf.addPage();\r\n            }\r\n            // tslint:disable-next-line: await-promise\r\n            canvas = await html2canvas(container[i] as unknown as HTMLElement, { scale: 4, letterRendering: true });\r\n            jsPdf.addImage(canvas.toDataURL(\"image/png\"), \"JPEG\", 0, 0, jsPdf.internal.pageSize.getWidth(), jsPdf.internal.pageSize.getHeight());\r\n\r\n        }\r\n        jsPdf.save(`${title}.pdf`);\r\n    };\r\n\r\n    return <div id=\"pdf-generator\" className=\"pdf-generator\">\r\n        <img\r\n            src={SavePdfIcon}\r\n            style={{ left: \"150px\" }}\r\n            className=\"toolbar-icon\"\r\n            id={\"pdf-generator-icon\"}\r\n            title={\"Generate a PDF file from this list\"}\r\n            alt={\"GeneratePdfIcon\"}\r\n            onClick={exportPdf}>\r\n        </img>\r\n    </div>;\r\n};\r\n","import React from \"react\";\r\nexport class ErrorMessages {\r\n\r\n    public static getInstance(): ErrorMessages {\r\n        return ErrorMessages.instance;\r\n    }\r\n    private static readonly instance: ErrorMessages = new ErrorMessages();\r\n    private errors: string[] = [];\r\n    protected constructor() { }\r\n\r\n    public addErrorMessage(error: string) {\r\n        this.errors = [...this.errors, error].filter((currentError, idx, arr) => arr.indexOf(currentError) === idx);\r\n    }\r\n    public getErrors() {\r\n        return this.errors;\r\n    }\r\n}\r\n\r\nexport const ErrorMessageRenderer = () => {\r\n    const errors = ErrorMessages.getInstance().getErrors();\r\n    const cssClass = errors.length > 0 ? \"error-container\" : \"error-container-placeholder\";\r\n    return <div className={cssClass}>\r\n        {errors.map((error) => <div>{error}</div>)}\r\n    </div>;\r\n};\r\n","import * as AdeptaSororitasArmySpecific from \"../data/armySpecifics/AdeptaSororitas.json\";\r\nimport * as AdeptusMechanicusArmySpecific from \"../data/armySpecifics/AdeptusMechanicus.json\";\r\nimport * as DarkAngelsArmySpecific from \"../data/armySpecifics/DarkAngels.json\";\r\nimport * as PrimarisArmySpecifics from \"../data/armySpecifics/PrimarisSpaceMarines.json\";\r\nimport * as TauArmySpecifics from \"../data/armySpecifics/Tau.json\";\r\nimport * as EquipmentJson from \"../data/Equipment.json\";\r\nimport * as RulesJson from \"../data/Rules.json\";\r\n// tslint:disable-next-line: max-line-length\r\nimport { ArmySpecificStuff, BasicWeapon, FactionEnum, MetadataModel, MetadataWeapon, MultiProfileRenderWeapon, MultiProfileWeapon, OtherEquipment, Philosophy, RenderModel, RenderWeapon, RosterModel, Rule, SuperBasicWeapon, Warband, WeaponReference } from \"../types\";\r\nimport { ErrorMessages } from \"./ErrorMessages\";\r\nconst weapons = EquipmentJson.weapons as MetadataWeapon[];\r\nconst otherEquipment = EquipmentJson.otherEquipment as OtherEquipment[];\r\nconst rules = RulesJson.rules as Rule[];\r\nconst philosophies = RulesJson.Philosophies as Philosophy[];\r\n\r\nexport const ensureWeaponExists = (input: MetadataWeapon | MultiProfileWeapon | undefined, name: string) => {\r\n    if (input === undefined) {\r\n        throw new TypeError(`${name} needs to be added to metadata`);\r\n    }\r\n    return input;\r\n};\r\n\r\nexport const getDetailedRoster = (roster: Array<RosterModel | string>, faction: FactionEnum, alignment?: string): Array<RenderModel | undefined> => roster.map((rosterModel) => {\r\n    const modelMetadata = typeof (rosterModel) === \"string\" ? getModelMetadata(rosterModel, faction) : getModelMetadata(rosterModel.name, faction);\r\n    const harmonizedRosterModel: RosterModel = typeof (rosterModel) === \"string\" ? { \"name\": rosterModel } : rosterModel;\r\n    const alignmentPlaceholder = getFactionSpecifics(faction).AlignmentPlaceholder;\r\n    if (!modelMetadata) {\r\n        ErrorMessages.getInstance().addErrorMessage(`Model with name '${typeof (rosterModel) === \"string\" ? rosterModel : rosterModel.name}' does not exist in Metadata`);\r\n        return undefined;\r\n    }\r\n    let remixedModel = remixModel(modelMetadata, harmonizedRosterModel);\r\n    const ruleStrings = harmonizedRosterModel.rules ? [...modelMetadata.rules || [], ...harmonizedRosterModel.rules].filter((keyword, idx, array) => array.indexOf(keyword) === idx) : modelMetadata.rules || [];\r\n    remixedModel = {\r\n        ...remixedModel,\r\n        keywords: remixedModel.keywords.map((keyword) => keyword === alignmentPlaceholder ? alignment || keyword : keyword),\r\n        rules: ruleStrings.map((ruleName) => getRule(ruleName, faction, alignment)).filter((rule) => rule !== undefined) as Rule[],\r\n    };\r\n    const equipment = modelMetadata.equipment;\r\n    remixedModel = {\r\n        ...remixedModel,\r\n        equipment: equipment ? {\r\n            weapons: equipment.weapons?.map((weapon) => getWeaponProfile(weapon, faction)).filter((weapon) => weapon !== undefined) as RenderWeapon[],\r\n            otherEquipment: equipment.otherEquipment?.map(getOtherEquipmentDetails),\r\n        } : undefined,\r\n    };\r\n    let rosterWeapons: RenderWeapon[] = [];\r\n    let otherRosterEquipment: OtherEquipment[] | undefined;\r\n    let replacedWeapons: string[] = [];\r\n    if (harmonizedRosterModel.equipment || remixedModel.equipment?.weapons) {\r\n        if (harmonizedRosterModel.equipment) {\r\n            rosterWeapons = harmonizedRosterModel.equipment.weapons?.map((weapon) => {\r\n                if (typeof (weapon) === \"string\") {\r\n                    return getWeaponProfile(weapon, faction);\r\n                }\r\n                if (!(isBasicWeapon(weapon) || isMultiProfileRenderWeapon(weapon)) && weapon.replacing) {\r\n                    const replacing = weapon.replacing;\r\n                    // tslint:disable-next-line: prefer-conditional-expression\r\n                    if (typeof (replacing) === \"string\") {\r\n                        replacedWeapons = [...replacedWeapons, replacing];\r\n                    } else {\r\n                        replacedWeapons = [...replacedWeapons, ...replacing];\r\n                    }\r\n                }\r\n                if (isRenderWeapon(weapon)) {\r\n                    return weapon;\r\n                }\r\n                return getWeaponProfile(weapon, faction);\r\n            }).filter((weapon) => weapon !== undefined) as RenderWeapon[] || [];\r\n            otherRosterEquipment = harmonizedRosterModel.equipment.otherEquipment?.map((equi) => {\r\n                if (typeof (equi) === \"string\") {\r\n                    return getOtherEquipmentDetails(equi);\r\n                }\r\n                return getOtherEquipmentDetails(equi.name);\r\n            });\r\n        }\r\n        remixedModel = {\r\n            ...remixedModel, equipment: {\r\n                weapons: [...remixedModel.equipment?.weapons?.filter((weapon) => replacedWeapons.find((replacedWeapon) => replacedWeapon === weapon.name) === undefined) || [], ...rosterWeapons],\r\n            },\r\n        };\r\n    }\r\n    if (remixedModel.equipment?.otherEquipment || otherRosterEquipment) {\r\n        let otherRemixedEquipment = otherRosterEquipment ? [...remixedModel.equipment?.otherEquipment || [], ...otherRosterEquipment] : remixedModel.equipment?.otherEquipment;\r\n        if (otherRemixedEquipment && alignment) {\r\n            otherRemixedEquipment = otherRemixedEquipment.map((equi) => ({ ...equi, effect: equi.effect.replace(alignmentPlaceholder || \"\", alignment) }));\r\n        }\r\n        remixedModel = {\r\n            ...remixedModel, equipment: {\r\n                weapons: remixedModel.equipment?.weapons,\r\n                otherEquipment: otherRemixedEquipment,\r\n            },\r\n        };\r\n    }\r\n    remixedModel = {\r\n        ...remixedModel,\r\n        price: getTotalUnitPrice(remixedModel, faction),\r\n    };\r\n    return remixedModel;\r\n});\r\nconst getModelMetadata = (name: string, faction: FactionEnum) => getFactionSpecifics(faction).UnitList.find((unit) => unit.name.toLocaleUpperCase() === name.toLocaleUpperCase());\r\nconst remixModel = (metaDataModel: MetadataModel, rosterModel: RosterModel): RenderModel => {\r\n\r\n    const resultModel: RenderModel = {\r\n        name: rosterModel.name,\r\n        type: rosterModel.type || metaDataModel.type,\r\n        amount: rosterModel.amount,\r\n        // price: metaDataModel.price * (rosterModel.amount || 1),\r\n        price: metaDataModel.price,\r\n        keywords: rosterModel.keywords ? [...metaDataModel.keywords, ...rosterModel.keywords].filter((keyword, idx, array) => array.indexOf(keyword) === idx) : metaDataModel.keywords,\r\n        rules: [],\r\n        stats: Array.isArray(metaDataModel.stats) && Array.isArray(rosterModel.stats) ?\r\n            (rosterModel.stats ? [...metaDataModel.stats, ...rosterModel.stats] : metaDataModel.stats) :\r\n            rosterModel.stats ? { ...metaDataModel.stats, ...rosterModel.stats } : metaDataModel.stats,\r\n    };\r\n    return resultModel;\r\n};\r\n\r\nconst isWeaponReference = (weaponRef: any): weaponRef is WeaponReference => weaponRef.name && typeof (weaponRef.name) === \"string\" ? weaponRef.amount ? typeof (weaponRef.amount) === \"number\" ? true : false : true : false;\r\nconst isRenderWeapon = (weaponRef: any): weaponRef is RenderWeapon => weaponRef.name && typeof (weaponRef.name) === \"string\" && (weaponRef.type !== undefined || weaponRef.multiProfiles !== undefined);\r\n\r\nexport const isMultiProfileWeapon = (weapon: any): weapon is MultiProfileWeapon => weapon && weapon.name && typeof (weapon.name) === \"string\" && weapon.multiProfiles && typeof (weapon.multiProfiles) === \"object\";\r\nexport const isSuperBasicWeapon = (weapon: any): weapon is SuperBasicWeapon =>\r\n    weapon && weapon.name && typeof (weapon.name) === \"string\" &&\r\n    weapon.type && typeof (weapon.type) === \"string\" &&\r\n    weapon.strength && (typeof (weapon.strength) === \"string\" || typeof (weapon.strength) === \"number\") &&\r\n    weapon.damage && (typeof (weapon.damage) === \"string\" || typeof (weapon.damage) === \"number\") &&\r\n    (typeof (weapon.ap) === \"string\" || typeof (weapon.ap) === \"number\");\r\nexport const isBasicWeapon = (weapon: any): weapon is BasicWeapon => typeof (weapon.price) === \"number\" && typeof (weapon.amount) === \"number\" && isSuperBasicWeapon(weapon);\r\n\r\nexport const isMultiProfileRenderWeapon = (weapon: any): weapon is MultiProfileRenderWeapon => typeof (weapon.price) === \"number\" && typeof (weapon.amount) === \"number\" && isMultiProfileWeapon(weapon);\r\n\r\nconst getWeaponProfile = (weaponRef: string | WeaponReference, faction: FactionEnum): RenderWeapon | undefined => {\r\n    if (typeof weaponRef === \"string\") {\r\n        const weaponDetails = getWeaponDetails(weaponRef);\r\n        if (!weaponDetails) {\r\n            ErrorMessages.getInstance().addErrorMessage(`Weapon with name '${weaponRef}' does not exist in Metadata. Specify the full weapon profile instead.`);\r\n            return undefined;\r\n        }\r\n        return { ...weaponDetails, price: getWeaponPrice(weaponDetails.name, faction, 1), amount: 1 };\r\n    }\r\n    if (isWeaponReference(weaponRef)) {\r\n        const weaponDetails = getWeaponDetails(weaponRef.name);\r\n        if (!weaponDetails) {\r\n            ErrorMessages.getInstance().addErrorMessage(`Weapon with name '${weaponRef.name}' does not exist in Metadata. Specify the full weapon profile instead.`);\r\n            return undefined;\r\n        }\r\n        return { ...weaponDetails, price: getWeaponPrice(weaponDetails.name, faction, weaponRef.amount || 1), amount: weaponRef.amount || 1 };\r\n    }\r\n    return undefined;\r\n};\r\n\r\nexport const getFactionSpecifics = (faction: FactionEnum): ArmySpecificStuff => {\r\n    switch (faction) {\r\n        case FactionEnum.AdeptaSororitas: return AdeptaSororitasArmySpecific.AdeptaSororitas;\r\n        case FactionEnum.AdeptusMechanicus: return AdeptusMechanicusArmySpecific.AdeptusMechanicus;\r\n        case FactionEnum.DarkAngels: return DarkAngelsArmySpecific.DarkAngels;\r\n        case FactionEnum.PrimarisSpaceMarines: return PrimarisArmySpecifics.PrimarisSpaceMarines;\r\n        case FactionEnum.Tau: return TauArmySpecifics.Tau;\r\n        // case FactionEnum.Deathwatch: return ArmySpecifics.Deathwatch;\r\n        default: return { \"Keywords\": [], \"Philosophies\": [], \"AlignmentPlaceholder\": \"\", \"ModelAllowance\": { \"Core\": 0, \"Special\": 0, \"Leader\": 0 }, \"WeaponPriceList\": [], \"UnitList\": [] };\r\n    }\r\n};\r\n\r\nexport const getWeaponDetails = (name: string) => weapons.find((weapon) => weapon.name.toLocaleUpperCase() === name.toLocaleUpperCase());\r\nexport const getWeaponPrice = (weaponName: string, faction: FactionEnum, amount: number) => (getFactionSpecifics(faction).WeaponPriceList.find((weapon) => weapon.name.toLocaleUpperCase() === weaponName.toLocaleUpperCase())?.price || 0) * amount;\r\n\r\nexport const getOtherEquipmentDetails = (name: string) => otherEquipment.find((equi) => equi.name.toLocaleUpperCase() === name.toLocaleUpperCase()) as OtherEquipment;\r\n\r\nexport const getTotalUnitPrice = (model: RenderModel, faction: FactionEnum) => {\r\n    let totalPrice = model.price || getFactionSpecifics(faction).UnitList.find((unit) => unit.name.toLocaleUpperCase() === model.name.toLocaleUpperCase())?.price || 0;\r\n    totalPrice += model.equipment?.weapons?.reduce((a, weapon) => a + (weapon.price || (weapon.isLegendary ? 20 : 0)), 0) || 0;\r\n    totalPrice += model.equipment?.otherEquipment?.reduce((a, equipment) => a + (equipment.price || 0), 0) || 0;\r\n    totalPrice += model.rules.reduce((a, rule) => a + (rule.price || 0), 0) || 0;\r\n    return totalPrice * (model.amount || 1);\r\n};\r\n\r\nexport const getRosterPrice = (models: RenderModel[]) => models.reduce((totalCost, model) => totalCost + model.price, 0);\r\nexport const getArmyRules = (faction: FactionEnum, alignment?: string) => {\r\n    const factionSpecifics = getFactionSpecifics(faction);\r\n    const factionRules = factionSpecifics.ArmyRules || [];\r\n    const alignmentRule = factionSpecifics.Alignments?.find((align) => align.name === alignment);\r\n    return alignmentRule ? [...factionRules, alignmentRule] : factionRules;\r\n};\r\nexport const getRule = (ruleName: string, faction: FactionEnum, alignment?: string): Rule | undefined => {\r\n    let actualRule = rules.find((rule) => rule.name.toLocaleUpperCase() === ruleName.toLocaleUpperCase());\r\n    if (!actualRule) {\r\n        ErrorMessages.getInstance().addErrorMessage(`Rule with name '${ruleName}' does not exist in Metadata`);\r\n        return undefined;\r\n    }\r\n    return actualRule.alignmentParameter && alignment ? actualRule = { ...actualRule, effect: actualRule.effect.replace(getFactionSpecifics(faction).AlignmentPlaceholder || \"\", alignment) } : actualRule;\r\n};\r\n\r\nexport const getAllKeywords = (models: RenderModel[]) => models.reduce((keywords: string[], model) => [...keywords, ...model.keywords], []).filter((item, idx, array) => array.indexOf(item) === idx).sort();\r\nexport const getPhilosophy = (name: string, faction: FactionEnum) => {\r\n    let phil = philosophies.find((philosophy) => philosophy.name.toLocaleUpperCase() === name?.toLocaleUpperCase());\r\n    if (!phil) {\r\n        phil = getFactionSpecifics(faction).Philosophies.find((philosophy) => philosophy.name.toLocaleUpperCase() === name?.toLocaleUpperCase());\r\n        if (!phil) {\r\n            ErrorMessages.getInstance().addErrorMessage(`Philosophy with name '${name}' does not exist in Metadata`);\r\n            return undefined;\r\n        }\r\n    }\r\n    return phil;\r\n};\r\n\r\nexport const isWarband = (json: any): json is Warband => {\r\n    const titleExistsAndIsString = json.Title && typeof json.Title === \"string\";\r\n    const factionExistsAndIsString = json.Faction && typeof json.Faction === \"string\";\r\n    const scenarioExistsAndIsNumber = json.ScenariosPlayed && typeof json.ScenariosPlayed === \"number\";\r\n    return titleExistsAndIsString && factionExistsAndIsString && scenarioExistsAndIsNumber;\r\n    // Philosophy?: string;\r\n    // Alignment?: string;\r\n    // Roster: Model[];\r\n    // ArmyRules?: string[];\r\n};\r\n","import { FactionEnum, RenderModel, RenderWarband, TacticalPoints } from \"../types\";\r\nimport { getAllKeywords, getFactionSpecifics } from \"./Utils\";\r\n\r\nconst strInNumberText = \"Gain 1 TP for taking the maximum number of Core models according to your Model Allowance.\";\r\nconst creamOfCropText = \"Gain 1 TP for taking the maximum number of Special models according to your Model Allowance.\";\r\nconst countSpecial = (members: RenderModel[]) => members.filter((member) => member.type === \"Special\").reduce((acc, member) => acc + (member.amount ? member.amount : 1), 0);\r\nconst countCore = (members: RenderModel[]) => members.filter((member) => member.type === \"Special\").reduce((acc, member) => acc + (member.amount ? member.amount : 1), 0);\r\n// const hasOneOfEach = (members: Model[]) => members.some((member) => member.type === \"Special\") && members.some((member) => member.type === \"Core\");\r\nconst hasTrueHeros = (members: RenderModel[], warband: RenderWarband) => members.filter((member) => member.price / (member.amount || 1) >= 100).length;\r\nexport const hasArmouryEquipment = (models: RenderModel[]) => models.filter((model) =>\r\n    model.equipment?.weapons?.some((weapon) => weapon.isArmouryItem) ||\r\n    model.equipment?.otherEquipment?.some((equi) => equi.isArmouryItem)\r\n);\r\nconst allUnitsSharedKeyword = (warband: RenderWarband) => {\r\n    const factionKeywords = [...getFactionSpecifics(warband.Faction as FactionEnum).Keywords, warband.Alignment];\r\n    const membersWithoutFactionKeywords = warband.Roster.map((model) => ({ ...model, keywords: (model.keywords.filter((keyword) => !factionKeywords.some((factionKeyword) => factionKeyword === keyword))) }));\r\n    const firstMember = membersWithoutFactionKeywords.shift() as RenderModel;\r\n    return firstMember.keywords.reduce((commonKeywords, keyword) => {\r\n        if (membersWithoutFactionKeywords.every((inner) => inner.keywords.some((innerKeyword) => innerKeyword === keyword))) {\r\n            return [...commonKeywords, keyword];\r\n        }\r\n        return commonKeywords;\r\n    }, [] as string[]).length > 0;\r\n\r\n};\r\n\r\nexport const getStratagems = (warband: RenderWarband): TacticalPoints[] => {\r\n    let myArr: TacticalPoints[] = [{ name: \"Destined For Greatness\", amount: warband.ScenariosPlayed ? warband.ScenariosPlayed + 1 : 1, text: \"Gain 1 TP for including a leader. Add +1 for each game this Leader has taken part in until now\" }];\r\n    myArr = countCore(warband.Roster) === getFactionSpecifics(warband.Faction as FactionEnum).ModelAllowance.Core ? [...myArr, { name: \"Strength In Numbers\", amount: 1, text: strInNumberText }] : [...myArr];\r\n    myArr = countSpecial(warband.Roster) === getFactionSpecifics(warband.Faction as FactionEnum).ModelAllowance.Special ? [...myArr, { name: \"Cream Of The Crop\", amount: 1, text: creamOfCropText }] : [...myArr];\r\n    myArr = allUnitsSharedKeyword(warband) ? [...myArr, { name: \"Bound by Experience\", amount: 1, text: \"Gain 1 TP if all models in your team share at least one non-faction keyword.\" }] : [...myArr];\r\n    myArr = hasTrueHeros(warband.Roster, warband) ? [...myArr, { name: \"Herohammer\", amount: hasTrueHeros(warband.Roster, warband), text: \"Gain 1 TP for each model in your team which cost 100 points or more\" }] : [...myArr];\r\n    myArr = getAllKeywords(warband.Roster).length > 8 ? [...myArr, { name: \"Death And Diversity\", amount: 1, text: \"Gain 1 TP if your team contains 8 or more different Keywords.\" }] : [...myArr];\r\n    myArr = hasArmouryEquipment(warband.Roster).length === 0 ? [...myArr, { name: \"Boots Before Loot\", amount: 1, text: \"Gain 1 TP if your team does not contain any items from your Opus’ Armoury\" }] : [...myArr];\r\n    myArr = hasArmouryEquipment(warband.Roster).length >= 5 ? [...myArr, { name: \"Shiny Fingz\", amount: 1, text: \"Gain 1 TP if your team contains 5 or more Armoury items\" }] : [...myArr];\r\n    return myArr;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport * as AdeptaSororitas from \"../data/samples/AdeptaSororitas.json\";\r\nimport * as AdeptusMechanicus from \"../data/samples/AdeptusMechanicus.json\";\r\nimport * as DarkAngelsJson from \"../data/samples/DarkAngels.json\";\r\nimport * as PrimarisJson from \"../data/samples/PrimarisBois.json\";\r\nimport * as TauJson from \"../data/samples/TauEmpire.json\";\r\nimport { AdeptaSororitasCover, AdeptusMechanicusCover, DarkAngelsCover, DeathwatchCover, ImportWarbandIcon, PrimarisCover, TauEmpireCover } from \"../images\";\r\nimport { Warband } from \"../types\";\r\nimport { FileUploader } from \"../utility\";\r\n\r\nexport const LandingPage = () => {\r\n    const [state, setState] = useState<Warband | undefined>(undefined);\r\n    const [pathname, setPathName] = useState<string>(\"\");\r\n    const setStateAndPath = (stateFromCallback: Warband) => {\r\n        setState(stateFromCallback);\r\n        setPathName(\"/Warband\");\r\n    };\r\n    return (\r\n        <div className=\"landing-page-container\">\r\n            <div style={{ fontSize: \"30px\", fontWeight: \"bold\", position: \"absolute\", top: 10, left: \"150px\" }}>Click here to load your warband roster from file</div>\r\n            <FileUploader image={\r\n                <img style={{ width: \"50px\", height: \"50px\", left: \"75px\", top: 5 }} alt=\"OpenWarband\" className=\"toolbar-icon\" src={ImportWarbandIcon} title=\"Open any warband from file\" />\r\n            } setStateCallback={setStateAndPath} />\r\n            <div style={{ fontSize: \"26px\", fontWeight: \"bold\", float: \"left\", padding: \"10px\" }}>Alternatively choose a sample warband from below to view its roster:</div>\r\n            <div style={{ display: \"grid\", gridTemplateColumns: \"264px 264px 264px\", float: \"left\" }}>\r\n                {state ? <Redirect to={{ pathname, state }} push /> : undefined}\r\n                <img\r\n                    alt=\"Dark Angels\"\r\n                    className=\"landing-page-icon\"\r\n                    src={DarkAngelsCover}\r\n                    onClick={() => {\r\n                        setState((DarkAngelsJson as any).default as Warband);\r\n                        setPathName(\"/Warband\");\r\n                    }} />\r\n                <img\r\n                    alt=\"Tau Empire\"\r\n                    className=\"landing-page-icon\"\r\n                    src={TauEmpireCover}\r\n                    onClick={() => {\r\n                        setState((TauJson as any).default as Warband);\r\n                        setPathName(\"/Warband\");\r\n                    }} />\r\n                <img\r\n                    alt=\"Primaris\"\r\n                    className=\"landing-page-icon\"\r\n                    src={PrimarisCover}\r\n                    onClick={() => {\r\n                        setState((PrimarisJson as any).default as Warband);\r\n                        setPathName(\"/Warband\");\r\n                    }} />\r\n                <img\r\n                    alt=\"Adeptus Mechanicus\"\r\n                    className=\"landing-page-icon\"\r\n                    src={AdeptusMechanicusCover}\r\n                    onClick={() => {\r\n                        setState((AdeptusMechanicus as any).default as Warband);\r\n                        setPathName(\"/Warband\");\r\n                    }} />\r\n                <img\r\n                    alt=\"Deathwatch\"\r\n                    className=\"landing-page-icon\"\r\n                    src={DeathwatchCover}\r\n                    onClick={() => {\r\n                        setState((AdeptusMechanicus as any).default as Warband);\r\n                        setPathName(\"/Warband\");\r\n                    }} />\r\n                {/* <img\r\n                    alt=\"Astra Militarum\"\r\n                    className=\"landing-page-icon\"\r\n                    src={AstraMilitarumCover}\r\n                    onClick={() => {\r\n                        setState((AdeptusMechanicus as any).default as Warband);\r\n                        setPathName(\"/Warband\");\r\n                    }} /> */}\r\n                <img\r\n                    alt=\"Adepta Sororitas\"\r\n                    className=\"landing-page-icon\"\r\n                    src={AdeptaSororitasCover}\r\n                    onClick={() => {\r\n                        setState((AdeptaSororitas as any).default as Warband);\r\n                        setPathName(\"/Warband\");\r\n                    }} />\r\n            </div>\r\n\r\n        </div >\r\n    );\r\n};\r\n","// tslint:disable: no-implicit-dependencies\r\n// tslint:disable: no-var-requires\r\n\r\nimport \"codemirror/lib/codemirror.css\";\r\nimport \"codemirror/mode/javascript/javascript.js\";\r\nimport \"codemirror/theme/mbo.css\";\r\n// import \"jshint\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Controlled as CodeMirror } from \"react-codemirror2\";\r\nimport { ExportWarbandIcon, RefreshWarbandDisabledIcon, RefreshWarbandIcon } from \"./images\";\r\nimport { Warband } from \"./types\";\r\nimport { isWarband } from \"./utility\";\r\n\r\ndeclare global {\r\n    interface Window { jsonLint: any; }\r\n}\r\n\r\nrequire(\"codemirror/addon/lint/json-lint.js\");\r\nrequire(\"codemirror/addon/lint/lint.js\");\r\nrequire(\"codemirror/addon/lint/lint.css\");\r\n\r\nexport const CodeEditorContainer = ({ code, visible, onSave }: { code: Warband; visible: boolean; onSave: any }) => {\r\n    const [codeEditorState, setCodeEditorState] = useState(JSON.stringify(code, null, 2));\r\n    const [isViable, setViable] = useState<boolean>(isWarband(code));\r\n    const [isDirty, setDirty] = useState<boolean>(false);\r\n    useEffect(() => {\r\n        setCodeEditorState(JSON.stringify(code, null, 2));\r\n    }, [code]);\r\n\r\n    const saveJsonToFile = (state: string) => {\r\n        const anchor = document.createElement(\"a\");\r\n        document.body.appendChild(anchor);\r\n        const blob = new Blob([state], { type: \"octet/stream\" });\r\n        const url = window.URL.createObjectURL(blob);\r\n        anchor.href = url;\r\n        anchor.download = `${code.Title} - ${code.Faction}.json`;\r\n        anchor.id = \"ClickableDownloadAnchor\";\r\n        anchor.click();\r\n        window.URL.revokeObjectURL(url);\r\n        document.body.removeChild(document.getElementById(\"ClickableDownloadAnchor\") as Node);\r\n    };\r\n    const refreshRendering = () => {\r\n        onSave(JSON.parse(codeEditorState));\r\n        setDirty(false);\r\n    };\r\n\r\n    return (\r\n        visible ? <div className=\"code-mirror-container\">\r\n            <img\r\n                src={isDirty && isViable ? RefreshWarbandIcon : RefreshWarbandDisabledIcon}\r\n                style={{ width: \"50px\", height: \"50px\", left: \"300px\", cursor: isDirty ? \"pointer\" : \"auto\" }}\r\n                className=\"toolbar-icon\"\r\n                alt=\"Refresh Warband\"\r\n                onClick={() => isDirty && isViable ? refreshRendering() : (() => undefined)()}\r\n                title={`${isDirty ? \"Refresh warband\" : \"Make a change in the Editor. Afterwards you can trigger the refresh by clicking here\"}`}\r\n            />\r\n            <img\r\n                src={isViable ? ExportWarbandIcon : ExportWarbandIcon}\r\n                style={{ width: \"50px\", height: \"50px\", left: \"375px\" }}\r\n                className=\"toolbar-icon\"\r\n                alt=\"Save JSON file\"\r\n                onClick={() => saveJsonToFile(codeEditorState)}\r\n                title=\"Save JSON file\"\r\n            />\r\n            <div className=\"code-mirror-title\">Warband JSON Editor</div>\r\n            <CodeMirror\r\n                className=\"code-mirror-editor\"\r\n                value={codeEditorState}\r\n                options={{\r\n                    theme: \"mbo\",\r\n                    viewportMargin: Infinity,\r\n                    mode: {\r\n                        name: \"javascript\",\r\n                        json: true,\r\n                        statementIndent: 2,\r\n                    },\r\n                    // mode: \"application/json\",\r\n                    gutters: [\"CodeMirror-lint-markers\"],\r\n                    lineNumbers: true,\r\n                    // lineWrapping: true,\r\n                    indentWithTabs: false,\r\n                    tabSize: 2,\r\n                    lint: {\r\n                        onUpdateLinting: (annotationsNotSorted: any[], annotations: any[], codeMirror: any) => {\r\n                            annotationsNotSorted.length > 0 ? setViable(false) : setViable(() => {\r\n                                let isWarbandBool = false;\r\n                                try {\r\n                                    isWarbandBool = isWarband(JSON.parse(codeEditorState));\r\n                                } catch (e) {\r\n                                    // tslint:disable-next-line: no-console\r\n                                    console.log(e);\r\n                                } finally {\r\n                                    // tslint:disable-next-line: no-unsafe-finally\r\n                                    return isWarbandBool;\r\n                                }\r\n                            }\r\n                            );\r\n                        },\r\n                    },\r\n                }}\r\n                // onKeyPress={(editor: CodeMirror.Editor, event?: KeyboardEvent) => {\r\n                //     if (event?.ctrlKey && event?.code === \"Space\") {\r\n\r\n                //         console.log(editor);\r\n                //         console.log(event);\r\n                //     }\r\n                // }}\r\n                autoCursor={false}\r\n                onBeforeChange={(_editor: any, _data: any, value: string) => {\r\n                    setCodeEditorState(value);\r\n                }}\r\n                onChange={(editor: any, data: any, value: any) => {\r\n                    if (data.removed?.toString().length !== 0 && data.text?.toString().length === 0) {\r\n                        editor.setCursor({ ...editor.getCursor(), ch: data.from.ch, line: data.from.line });\r\n                    } else if (data.text.toString().length !== (data.removed || \"\").toString().length) {\r\n                        editor.setCursor({ ...editor.getCursor(), ch: data.text.toString().length - (data.removed || \"\").toString().length + data.to.ch, line: data.to.line });\r\n                    } else {\r\n                        editor.setCursor({ ...editor.getCursor(), ch: data.to.ch + 1, line: data.to.line });\r\n                    }\r\n                    setDirty(true);\r\n                }}\r\n            />\r\n        </div> : null\r\n    );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { OpenEditorIcon, OpenEditorSelectedIcon } from \"../images\";\r\n\r\nexport const ToggleEditor = ({ setEditorVisibility }: { setEditorVisibility(json: any): void }) => {\r\n    const [selected, toggleSelected] = useState<boolean>(false);\r\n    useEffect(() => {\r\n        setEditorVisibility(selected);\r\n    }, [selected, setEditorVisibility]);\r\n    return <img\r\n        src={selected ? OpenEditorSelectedIcon : OpenEditorIcon}\r\n        style={{ width: \"50px\", height: \"50px\", left: \"75px\" }}\r\n        className=\"toolbar-icon\"\r\n        alt=\"Open/Close Editor\"\r\n        onClick={() => {\r\n            toggleSelected(!selected);\r\n        }}\r\n        title=\"Open Editor\"\r\n    />;\r\n};\r\n","import React from \"react\";\r\nimport { ImportWarbandIcon } from \"../images\";\r\nimport { Warband } from \"../types\";\r\nimport { FileUploader, PdfGenerator } from \"../utility\";\r\nimport { ToggleEditor } from \"./ToggleEditor\";\r\n\r\nexport const Toolbar = ({ state, setState, setEditorVisibility }: { state: Warband; setState(json: any): void; setEditorVisibility(visible: any): void }) => <div>\r\n    <ToggleEditor setEditorVisibility={setEditorVisibility} />\r\n    <PdfGenerator title={state.Title} />\r\n    <FileUploader image={\r\n        <img style={{ width: \"50px\", height: \"50px\", left: \"225px\" }} alt=\"OpenWarband\" className=\"toolbar-icon\" src={ImportWarbandIcon} title=\"Open another warband from file\" />\r\n    } setStateCallback={setState} />\r\n</div >;\r\n","import React from \"react\";\r\n\r\nexport const ArmyKeywordsRenderer = ({ keywords }: { keywords: string[] }) => {\r\n    const renderKeywords = () => keywords.join(\", \");\r\n    return <div className=\"quick-ref-enemies-container army-keywords-container\">\r\n        <div className=\"container-header\">{`Keywords (${keywords.length})`}</div>\r\n        <div className=\"keywords-text\">{renderKeywords()}</div>\r\n    </div>;\r\n};\r\n","import React from \"react\";\r\nimport { Rule } from \"../types\";\r\n\r\nexport const ArmyRulesHeaderRenderer = ({ armyRules }: { armyRules: Rule[] }) => {\r\n    const renderGlobalRules = () =>\r\n        armyRules.map((rule) =>\r\n            <div key={`rule_${rule?.name}`} className=\"split-div\">\r\n                <div className=\"split-div-header\">{rule?.name}</div>\r\n                <div className=\"split-div-text\">{rule?.effect}</div>\r\n            </div>\r\n        );\r\n    return armyRules && armyRules.length > 0 ? <div className=\"quick-ref-enemies-container\">\r\n        <div className=\"container-header\">Army wide rules:</div>\r\n        {renderGlobalRules()}\r\n    </div> : null;\r\n};\r\n","import React from \"react\";\r\nimport { FactionEnum, TacticalPoints } from \"../types\";\r\nimport { getPhilosophy } from \"../utility\";\r\n\r\nexport const ArmyTacticalPointsRenderer = ({ stratagems, philosophy, faction }: { stratagems: TacticalPoints[]; philosophy: string | undefined; faction: FactionEnum }) => {\r\n    const tacticalPoints = stratagems.reduce((acc, stata) => acc + stata.amount, philosophy ? getPhilosophy(philosophy, faction)?.tp || 0 : 0);\r\n    const renderCheckboxes = () => {\r\n        let checkboxes: JSX.Element[] = [];\r\n        for (let i = 0; i < tacticalPoints; i++) {\r\n            checkboxes = [...checkboxes, <div key={`tactical-checkboxes-${i}`} style={{ width: \"10px\", height: \"10px\", border: \"1px solid\", float: \"right\", marginRight: \"8px\", marginTop: \"2px\", background: \"white\" }} />];\r\n        }\r\n        return checkboxes;\r\n    };\r\n    return <div className=\"quick-ref-enemies-container army-keywords-container\">\r\n        <div className=\"container-header\">\r\n            {`Tactical Points (${tacticalPoints})`}\r\n            {renderCheckboxes()}\r\n        </div>\r\n        {philosophy ? <div className=\"split-div\">\r\n            <div className=\"split-div-header\" style={{ paddingRight: \"5px\" }}>{`${philosophy} (${getPhilosophy(philosophy, faction)?.tp}) [Philosophy]`}</div>\r\n            <div className=\"split-div-text\">{getPhilosophy(philosophy, faction)?.text}</div>\r\n        </div> : undefined}\r\n        {stratagems.map((stratagem) => <div key={`stratagem_${stratagem?.name}`} className=\"split-div\">\r\n            <div className=\"split-div-header\">{`${stratagem.name} (${stratagem.amount})`}</div><div className=\"split-div-text\">{stratagem.text}</div></div>)}\r\n    </div>;\r\n};\r\n","import React from \"react\";\r\nimport { LegendaryIcon } from \"../images\";\r\nimport { BasicWeapon, FactionEnum, MultiProfileWeapon, OtherEquipment, RenderEquipment, RenderWeapon, Rule, SuperBasicWeapon } from \"../types\";\r\nimport { getWeaponPrice, isBasicWeapon, isMultiProfileRenderWeapon, isMultiProfileWeapon } from \"../utility/Utils\";\r\n\r\nexport const ModelEquipmentRenderer = ({ equipment, faction, name }: { equipment: RenderEquipment; faction: FactionEnum; name: string }) => {\r\n    const weaponPriceString = (weapon: RenderWeapon) => getWeaponPrice(weapon.name, faction, weapon.amount || 1) ? `(${getWeaponPrice(weapon.name, faction, weapon.amount || 1)})` : weapon.isLegendary ? \"(20)\" : \"\";\r\n    const otherEquipmentPriceString = (otherEquipment: OtherEquipment) => otherEquipment.price ? `(${otherEquipment.price})` : \"\";\r\n    const weaponRuleRender = (weapon: BasicWeapon | SuperBasicWeapon) => {\r\n        if (typeof (weapon.rule) === \"string\" || weapon.rule === undefined) {\r\n            return <td key={`${name}-${weapon.name}-rule`}>{weapon.rule}</td>;\r\n        } else {\r\n            return <td key={`${name}-${weapon.name}-rules`}>{weapon.rule.map((rule) =>\r\n                typeof (rule) === \"string\" ?\r\n                    <div key={`${name}-${weapon.name}-rules-${rule}`}>{rule}</div> :\r\n                    <div key={`${name}-${weapon.name}-rules-${rule.name}`}><div style={{ float: \"left\", paddingRight: 3, fontWeight: \"bold\" }}>{rule.name}</div><div> - {rule.effect}</div></div>)}\r\n            </td>;\r\n        }\r\n    };\r\n    const weaponNameRender = (weapon: BasicWeapon | SuperBasicWeapon) => {\r\n        if (weapon.isLegendary) {\r\n            return <td key={`${name}-${weapon.name}-name`}><div>{weapon.name}</div><div><img style={{ height: \"20px\", padding: \"2px\" }} alt=\"LegendaryIcon\" src={LegendaryIcon} /></div> </td>;\r\n        } else {\r\n            return <td key={`${name}-${weapon.name}-name`}>{weapon.name} </td>;\r\n        }\r\n    };\r\n    const renderWeaponStats = (weapon: BasicWeapon | SuperBasicWeapon) =>\r\n        [weaponNameRender(weapon),\r\n        <td key={`${name}-${weapon.name}-type`}>{weapon.type}</td>,\r\n        <td key={`${name}-${weapon.name}-range`}>{weapon.range}</td>,\r\n        <td key={`${name}-${weapon.name}-strength`}>{weapon.strength}</td>,\r\n        <td key={`${name}-${weapon.name}-ap`}>{weapon.ap}</td>,\r\n        <td key={`${name}-${weapon.name}-damage`}>{weapon.damage}</td>,\r\n        weaponRuleRender(weapon)];\r\n    const renderMultiProfileHeader = (keyName: string, weaponName: string, weaponRule?: string | Array<string | Rule>) =>\r\n        <tr key={`weapon-table-row-${keyName}`}>\r\n            <td>{weaponName}</td>\r\n            {weaponRule ? <td colSpan={6}>{`${weaponRule}`}</td> : undefined}\r\n        </tr>;\r\n    const renderWeapon = (weapon: RenderWeapon | SuperBasicWeapon | MultiProfileWeapon, cnt: number) => {\r\n        let arr: JSX.Element[] = [];\r\n        const weaponName = cnt === 1 ? ` - ${weapon.name}` : cnt === 2 ? ` -  - ${weapon.name}` : weapon.name;\r\n        const amountString = (isBasicWeapon(weapon) || isMultiProfileRenderWeapon(weapon)) && weapon.amount > 1 && cnt === 0 ? `${weapon.amount}x` : \"\";\r\n        const headerString = (isBasicWeapon(weapon) || isMultiProfileRenderWeapon(weapon)) ? `${amountString} ${weaponName} ${weaponPriceString(weapon)}` : weaponName;\r\n        if (isMultiProfileWeapon(weapon) || isMultiProfileRenderWeapon(weapon)) {\r\n            arr = [\r\n                ...arr,\r\n                renderMultiProfileHeader(`weapon-table-row-${weapon.name}-${cnt}`, headerString, weapon.rule),\r\n\r\n            ];\r\n            if (weapon.multiProfiles) {\r\n                const multiProfiles = weapon.multiProfiles;\r\n                arr = arr.concat(...multiProfiles.map((profile) => renderWeapon(profile, cnt + 1)));\r\n            }\r\n        } else {\r\n            arr = [\r\n                <tr key={`weapon-table-row-${weapon.name}-${cnt}`}>\r\n                    {renderWeaponStats({ ...weapon, name: headerString })}\r\n                </tr>];\r\n        }\r\n        return arr;\r\n    };\r\n\r\n    const renderOtherEquipment = () => equipment.otherEquipment?.map((otherEquipment) =>\r\n        <tr key={`weapon-table-row-${otherEquipment.name}`}>\r\n            <td>{`${otherEquipment.name} ${otherEquipmentPriceString(otherEquipment)}`}</td>\r\n            <td>{otherEquipment.effect}</td>\r\n        </tr>);\r\n    return <div>\r\n        <table className=\"enemies-table\">\r\n            <colgroup>\r\n                <col style={{ width: \"100px\" }} />\r\n                <col style={{ width: \"45px\" }} />\r\n                <col style={{ width: \"20px\" }} />\r\n                <col style={{ width: \"20px\" }} />\r\n                <col style={{ width: \"20px\" }} />\r\n                <col style={{ width: \"20px\" }} />\r\n                <col style={{ width: \"180px\" }} />\r\n            </colgroup>\r\n            <thead>\r\n                <tr>\r\n                    <th>Weapons</th>\r\n                    <th>Type</th>\r\n                    <th>Rng</th>\r\n                    <th>Str</th>\r\n                    <th>AP</th>\r\n                    <th>Dmg</th>\r\n                    <th>Rule</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {equipment.weapons?.map((weapon) => renderWeapon(weapon, 0))}\r\n            </tbody>\r\n        </table>\r\n        {equipment.otherEquipment ? <table className=\"enemies-table\">\r\n            <colgroup>\r\n                <col style={{ width: \"100px\" }} />\r\n                <col style={{ width: \"307px\" }} />\r\n            </colgroup>\r\n            <thead>\r\n                <tr>\r\n                    <th>Equipment</th>\r\n                    <th>Effect</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {renderOtherEquipment()}\r\n            </tbody>\r\n        </table> : undefined}\r\n    </div>;\r\n};\r\n","import React from \"react\";\r\nimport { RenderModel } from \"../types\";\r\n\r\nexport const ModelHeaderRenderer = ({ model }: { model: RenderModel }) => {\r\n    const amountString = model.amount ? `${model.amount}x ` : \"\";\r\n    return <div className=\"container-header\">\r\n        <div style={{ float: \"left\", width: \"75%\" }}> {`${amountString} ${model.name} (${model.price})`}</div>\r\n        <div style={{ float: \"right\", width: \"calc(25% - 30px)\", paddingRight: \"15px\", textAlign: \"right\" }}>{`${model.type}`}</div>\r\n    </div>;\r\n};\r\n","import React from \"react\";\r\n\r\nexport const ModelKeywordRenderer = ({ keywords }: { keywords: string[] | undefined }) => keywords ? <div className=\"keywords-container\">\r\n    <div style={{ fontWeight: \"bold\", float: \"left\" }}>Keywords</div>\r\n    <div style={{ paddingLeft: \"192px\" }}>{keywords.join(\", \")}</div>\r\n</div> : null;\r\n","import React from \"react\";\r\nimport { Rule } from \"../types\";\r\n\r\nexport const ModelRulesRenderer = ({ rules }: { rules: Rule[] | undefined }) => {\r\n    const renderRules = () => rules?.map((rule) =>\r\n        <tr key={`rule_${rule.name}`}>\r\n            <td>{rule.price ? `${rule.name} (${rule.price})` : rule.name}</td>\r\n            <td>{rule.effect}</td>\r\n        </tr>);\r\n    return rules && rules.length > 0 ? <table className=\"enemies-table\">\r\n        <colgroup>\r\n            <col style={{ width: \"100px\" }} />\r\n            <col style={{ width: \"305px\" }} />\r\n        </colgroup>\r\n        <thead>\r\n            <tr>\r\n                <th>Rule</th>\r\n                <th>Effect</th>\r\n            </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n            {renderRules()}\r\n        </tbody>\r\n    </table> : null;\r\n};\r\n","import React from \"react\";\r\nimport { ModelStats } from \"../types\";\r\n\r\nexport const ModelStatsRenderer = ({ name, stats }: { name: string; stats: ModelStats | ModelStats[] }) => {\r\n    const renderAtomicStats = (characteristics: ModelStats, idx?: number) => <tr key={`modelstats-${name}-${idx}`}>\r\n        {idx === 0 ? <td rowSpan={2} style={{ paddingTop: \"12px\" }}>{name}</td> : idx !== undefined ? undefined : <td>{name}</td>}\r\n        <td>{characteristics.Movement}</td>\r\n        <td>{characteristics.WeaponSkill}</td>\r\n        <td>{characteristics.BallisticSkill}</td>\r\n        <td>{characteristics.Strength}</td>\r\n        <td>{characteristics.Toughness}</td>\r\n        <td>{characteristics.Wounds}</td>\r\n        <td>{characteristics.Attacks}</td>\r\n        <td>{characteristics.Leadership}</td>\r\n        <td>{characteristics.Save}</td>\r\n        <td>{characteristics.InvulnerableSave}</td>\r\n    </tr>;\r\n    const renderStats = () => Array.isArray(stats) ? stats.map(renderAtomicStats) : renderAtomicStats(stats);\r\n    return <table className=\"enemies-table\">\r\n        <colgroup>\r\n            <col style={{ width: \"100px\" }} />\r\n            <col style={{ width: \"25px\" }} />\r\n            <col style={{ width: \"25px\" }} />\r\n            <col style={{ width: \"25px\" }} />\r\n            <col style={{ width: \"25px\" }} />\r\n            <col style={{ width: \"25px\" }} />\r\n            <col style={{ width: \"25px\" }} />\r\n            <col style={{ width: \"25px\" }} />\r\n            <col style={{ width: \"25px\" }} />\r\n            <col style={{ width: \"25px\" }} />\r\n            <col style={{ width: \"80px\" }} />\r\n        </colgroup>\r\n        <thead>\r\n            <tr>\r\n                <th>Name</th>\r\n                <th>M</th>\r\n                <th>WS</th>\r\n                <th>BS</th>\r\n                <th>S</th>\r\n                <th>T</th>\r\n                <th>W</th>\r\n                <th>A</th>\r\n                <th>LD</th>\r\n                <th>Sv</th>\r\n                <th>Is</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            {renderStats()}\r\n        </tbody>\r\n    </table>;\r\n};\r\n","import React from \"react\";\r\nimport { FactionEnum, ModelStats, RenderModel } from \"../types\";\r\nimport { ModelEquipmentRenderer } from \"./ModelEquipment\";\r\nimport { ModelHeaderRenderer } from \"./ModelHeaderRenderer\";\r\nimport { ModelKeywordRenderer } from \"./ModelKeywords\";\r\nimport { ModelRulesRenderer } from \"./ModelRules\";\r\nimport { ModelStatsRenderer } from \"./ModelStats\";\r\n\r\nexport const ModelSheetRenderer = ({ model, faction }: { model: RenderModel; faction: FactionEnum }) =>\r\n    <div id={`modelsheet-${model.name}-${model.price}`} className=\"quick-ref-enemies-container model-container\">\r\n        <ModelHeaderRenderer model={model} />\r\n        <ModelStatsRenderer name={model.name} stats={model.stats as ModelStats} />\r\n        {model.equipment ? <ModelEquipmentRenderer equipment={model.equipment} faction={faction} name={`${model.name}-${model.price}`} /> : undefined}\r\n        <ModelRulesRenderer rules={model.rules} />\r\n        <ModelKeywordRenderer keywords={model.keywords} />\r\n    </div>;\r\n","import React from \"react\";\r\nimport { FactionEnum, RenderWarband, TacticalPoints } from \"../types\";\r\nimport { getAllKeywords, getArmyRules } from \"../utility\";\r\nimport { ArmyKeywordsRenderer } from \"./ArmyKeywords\";\r\nimport { ArmyRulesHeaderRenderer } from \"./ArmyRules\";\r\nimport { ArmyTacticalPointsRenderer } from \"./ArmyTacticalPoints\";\r\nimport { ModelSheetRenderer } from \"./ModelSheet\";\r\n\r\nexport const WarbandRenderer = (\r\n    { state, page, rosterPrice, stratagems, fullRender, hide }: { state: RenderWarband; page: { nr: number; total: number }; rosterPrice: number; stratagems: TacticalPoints[]; fullRender?: boolean; hide?: boolean }) => {\r\n    const faction = state.Faction as FactionEnum;\r\n    return <div id={`roster-sheet-container${page.nr}`} className={`${fullRender ? \"a4-container\" : \"pdf-container\"} ${hide ? \"hide-container\" : \"\"}`} style={{ float: \"left\", marginTop: 0, paddingTop: 0 }}>\r\n        <div className=\"roster-sheet-title\">{`${state.Title} - ${state.Faction} (${rosterPrice} pts)`}</div>\r\n        {page.nr === 1 ?\r\n            <div>\r\n                <ArmyRulesHeaderRenderer armyRules={getArmyRules(faction, state.Alignment)} />\r\n                <ArmyKeywordsRenderer keywords={getAllKeywords(state.Roster)} />\r\n                <ArmyTacticalPointsRenderer stratagems={stratagems} philosophy={state.Philosophy} faction={faction} />\r\n            </div> :\r\n            undefined}\r\n        {state.Roster.map((member) => <ModelSheetRenderer\r\n            key={`modelsheet-${member.name}-${member.price}`}\r\n            model={member}\r\n            faction={state.Faction as FactionEnum}\r\n        />)}\r\n        <div className=\"roster-sheet-footer\">{`${page.nr} / ${page.total}`}</div>\r\n    </div >;\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { CodeEditorContainer } from \"../CodeMirror\";\r\nimport { FactionEnum, PageMap, RenderModel, Warband } from \"../types\";\r\nimport { getDetailedRoster, getRosterPrice, getStratagems } from \"../utility\";\r\nimport { ErrorMessageRenderer } from \"../utility/ErrorMessages\";\r\nimport { Toolbar } from \"../utility/Toolbar\";\r\nimport { WarbandRenderer } from \"../WarbandRendering/WarbandRenderer\";\r\n\r\nexport const WarbandPage = (path: any) => {\r\n    const [modelMap, setModelMap] = useState<PageMap[]>([]);\r\n    const [state, setState] = useState<Warband>(path.location.state as Warband);\r\n    const [editorVisible, setEditorVisibility] = useState<boolean>(false);\r\n    useEffect(() => {\r\n        setModelMap((map) => [\r\n            ...map,\r\n            ...Array.from(document.querySelectorAll(\".model-container\")).filter((el) => el.getBoundingClientRect().height + el.getBoundingClientRect().top < 1122).map((element) => ({ \"id\": element.id, \"page\": 1 })),\r\n            ...Array.from(document.querySelectorAll(\".model-container\")).filter((el) =>\r\n                el.getBoundingClientRect().height + el.getBoundingClientRect().top >= 1122 &&\r\n                el.getBoundingClientRect().height + el.getBoundingClientRect().top < 2144\r\n            ).map((element) => ({ \"id\": element.id, \"page\": 2 })),\r\n            ...Array.from(document.querySelectorAll(\".model-container\")).filter((el) =>\r\n                el.getBoundingClientRect().height + el.getBoundingClientRect().top >= 2144).map((element) => ({ \"id\": element.id, \"page\": 3 })),\r\n        ]);\r\n    }, []);\r\n\r\n    const faction = state.Faction as FactionEnum;\r\n    const roster = getDetailedRoster(state.Roster, faction, state.Alignment).filter((member) => member !== undefined) as RenderModel[];\r\n    const filterRosterToPage = (page: number): RenderModel[] => roster.filter((member) => modelMap.find((entry) => entry.id === `modelsheet-${member.name}-${member.price}` && entry.page === page));\r\n    const getPageCountFromMap = () => modelMap.map((model) => model.page).filter((page, idx, arr) => arr.indexOf(page) === idx).length;\r\n    const renderPages = () => {\r\n        let pages: JSX.Element[] = [];\r\n        for (let i = 1; i <= getPageCountFromMap(); i++) {\r\n            pages = [\r\n                ...pages,\r\n                <WarbandRenderer\r\n                    key={`warband-pdf-rendering-page${i}`}\r\n                    state={{ ...state, Roster: filterRosterToPage(i) }}\r\n                    page={{ nr: i, total: getPageCountFromMap() }}\r\n                    rosterPrice={getRosterPrice(roster)}\r\n                    stratagems={getStratagems({ ...state, Roster: roster })}\r\n                />,\r\n            ];\r\n        }\r\n        return pages;\r\n    };\r\n    return <div>\r\n        <Toolbar state={state} setState={setState} setEditorVisibility={setEditorVisibility} />\r\n        <ErrorMessageRenderer />\r\n        {modelMap.length ? <div>{renderPages()}</div > : undefined}\r\n        <WarbandRenderer state={{ ...state, Roster: roster }} page={{ nr: 1, total: 1 }} rosterPrice={getRosterPrice(roster)} stratagems={getStratagems({ ...state, Roster: roster })} fullRender={true} hide={editorVisible} />\r\n        <CodeEditorContainer code={state} visible={editorVisible} onSave={setState} />\r\n    </div >;\r\n};\r\n","import React from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport { LandingPage, WarbandPage } from \"./pages\";\r\n\r\nexport const App = () =>\r\n  <BrowserRouter>\r\n    <div id=\"appBody\">\r\n      <Switch>\r\n        <Route path=\"/Warband\" component={WarbandPage} />\r\n        <Route path=\"/\" component={LandingPage} />\r\n      </Switch>\r\n    </div>\r\n  </BrowserRouter>;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { App } from \"./App\";\r\nimport \"./index.css\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}